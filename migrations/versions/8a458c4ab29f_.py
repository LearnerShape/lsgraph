"""empty message

Revision ID: 8a458c4ab29f
Revises: 5cdac957440d
Create Date: 2021-05-24 13:45:02.933477

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8a458c4ab29f'
down_revision = '5cdac957440d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'access_key', ['id'])
    op.create_unique_constraint(None, 'collection', ['id'])
    op.create_unique_constraint(None, 'collection_member', ['id'])
    op.create_unique_constraint(None, 'collection_resource', ['id'])
    op.create_unique_constraint(None, 'customer', ['id'])
    op.create_unique_constraint(None, 'format', ['id'])
    op.create_unique_constraint(None, 'group', ['id'])
    op.create_unique_constraint(None, 'group_member', ['id'])
    op.create_unique_constraint(None, 'offering', ['id'])
    op.create_unique_constraint(None, 'organization', ['id'])
    op.create_unique_constraint(None, 'platform', ['id'])
    op.create_unique_constraint(None, 'price', ['id'])
    op.add_column('profile', sa.Column('description', sa.Text(), nullable=True))
    op.add_column('profile', sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.add_column('profile', sa.Column('previous_version', postgresql.UUID(as_uuid=True), nullable=True))
    op.add_column('profile', sa.Column('type', sa.String(length=256), nullable=True))
    op.add_column('profile', sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.create_index(op.f('ix_profile_organization_id'), 'profile', ['organization_id'], unique=False)
    op.create_index(op.f('ix_profile_user_id'), 'profile', ['user_id'], unique=False)
    op.create_unique_constraint(None, 'profile', ['id'])
    op.create_foreign_key(None, 'profile', 'user', ['user_id'], ['id'])
    op.create_foreign_key(None, 'profile', 'profile', ['previous_version'], ['id'])
    op.create_foreign_key(None, 'profile', 'organization', ['organization_id'], ['id'])
    op.add_column('profile_skill', sa.Column('level', sa.Float(), nullable=True))
    op.add_column('profile_skill', sa.Column('profile_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.add_column('profile_skill', sa.Column('skill_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.create_index(op.f('ix_profile_skill_profile_id'), 'profile_skill', ['profile_id'], unique=False)
    op.create_unique_constraint(None, 'profile_skill', ['id'])
    op.create_foreign_key(None, 'profile_skill', 'skill', ['skill_id'], ['id'])
    op.create_foreign_key(None, 'profile_skill', 'profile', ['profile_id'], ['id'])
    op.drop_column('profile_skill', 'name')
    op.create_unique_constraint(None, 'provider', ['id'])
    op.create_unique_constraint(None, 'quality_attribute', ['id'])
    op.create_unique_constraint(None, 'quality_value', ['id'])
    op.create_unique_constraint(None, 'resource', ['id'])
    op.create_unique_constraint(None, 'skill', ['id'])
    op.create_unique_constraint(None, 'skill_include', ['id'])
    op.create_unique_constraint(None, 'user', ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='unique')
    op.drop_constraint(None, 'skill_include', type_='unique')
    op.drop_constraint(None, 'skill', type_='unique')
    op.drop_constraint(None, 'resource', type_='unique')
    op.drop_constraint(None, 'quality_value', type_='unique')
    op.drop_constraint(None, 'quality_attribute', type_='unique')
    op.drop_constraint(None, 'provider', type_='unique')
    op.add_column('profile_skill', sa.Column('name', sa.VARCHAR(length=512), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'profile_skill', type_='foreignkey')
    op.drop_constraint(None, 'profile_skill', type_='foreignkey')
    op.drop_constraint(None, 'profile_skill', type_='unique')
    op.drop_index(op.f('ix_profile_skill_profile_id'), table_name='profile_skill')
    op.drop_column('profile_skill', 'skill_id')
    op.drop_column('profile_skill', 'profile_id')
    op.drop_column('profile_skill', 'level')
    op.drop_constraint(None, 'profile', type_='foreignkey')
    op.drop_constraint(None, 'profile', type_='foreignkey')
    op.drop_constraint(None, 'profile', type_='foreignkey')
    op.drop_constraint(None, 'profile', type_='unique')
    op.drop_index(op.f('ix_profile_user_id'), table_name='profile')
    op.drop_index(op.f('ix_profile_organization_id'), table_name='profile')
    op.drop_column('profile', 'user_id')
    op.drop_column('profile', 'type')
    op.drop_column('profile', 'previous_version')
    op.drop_column('profile', 'organization_id')
    op.drop_column('profile', 'description')
    op.drop_constraint(None, 'price', type_='unique')
    op.drop_constraint(None, 'platform', type_='unique')
    op.drop_constraint(None, 'organization', type_='unique')
    op.drop_constraint(None, 'offering', type_='unique')
    op.drop_constraint(None, 'group_member', type_='unique')
    op.drop_constraint(None, 'group', type_='unique')
    op.drop_constraint(None, 'format', type_='unique')
    op.drop_constraint(None, 'customer', type_='unique')
    op.drop_constraint(None, 'collection_resource', type_='unique')
    op.drop_constraint(None, 'collection_member', type_='unique')
    op.drop_constraint(None, 'collection', type_='unique')
    op.drop_constraint(None, 'access_key', type_='unique')
    # ### end Alembic commands ###
